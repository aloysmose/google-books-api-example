{"version":3,"sources":["components/BookSearch/BookSearch.module.scss","components/Gears/Gears.module.scss","actions/books.ts","selectors/books.ts","components/BookList/BookList.tsx","shared/services/api/google-books/GoogleBooks.ts","components/BookSearch/BookSearch.tsx","components/Gears/Gears.tsx","components/Home/Home.tsx","components/Navbar/Navbar.tsx","components/Layout/Layout.tsx","components/App/theme.tsx","styles/variables.ts","reducers/books.ts","reducers/index.ts","store/index.ts","components/App/App.tsx","serviceWorker.ts","index.tsx","components/Home/Home.module.scss","components/Navbar/Navbar.module.scss"],"names":["module","exports","container","ActionTypes","getBooksState","state","books","getBooks","createSelector","data","isFetching","hasData","getQuery","query","connect","props","generateSubtitle","book","subtitle","authors","join","length","concat","publisher","react_default","a","createElement","className","Styles","GridList_default","spacing","cellHeight","GridListTile_default","key","cols","style","height","ListSubheader_default","component","map","index","src","image","alt","title","GridListTileBar_default","actionIcon","IconButton_default","onClick","Object","assign","document","target","href","link","click","Info_default","color","Typography_default","variant","gutterBottom","api","GoogleBooks","classCallCheck","this","apiUrl","maxResults","hasKey","console","warn","volumeInfo","imageLinks","extraLarge","large","medium","small","smallThumbnail","thumbnail","publishedDate","infoLink","rating","averageRating","convertedBooks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","b","value","push","ConvertGoogleBookToBook","err","return","url","encodeURI","getKey","debug","axios","get","then","res","ConvertGoogleBooksToBooks","items","catch","axiosError","error","name","message","Promise","reject","finally","process","GOOGLE_BOOKS_API_KEY","fetched","type","FETCHED","payload","fetch","dispatch","FETCHING","fetching","search","intervalId","TextField_default","label","defaultValue","onChange","event","currentTarget","clearTimeout","setTimeout","margin","fullWidth","Component","defaultOptions","loop","autoplay","animationData","dist_default","options","NoItemsComponent","noItemsContainer","BookSearch","ItemsLoadingComponent","Gears","HasItemsComponent","hasItemsContainer","BookList","c","Home_ItemsLoadingComponent","Home_HasItemsComponent","Home_NoItemsComponent","AppBar_default","position","Toolbar_default","grow","version","Fragment","Navbar","children","createMuiTheme","palette","primary","main","overrides","MuiButton","root","justifyContent","MuiTypography","body1","h6","typography","useNextVariants","initialState","fromBooks","reducer","combineReducers","arguments","action","objectSpread","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","App","es","MuiThemeProvider_default","theme","react_router_dom","Layout","react_router","exact","path","Home","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister","scaleIn","fadeIn"],"mappings":"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","file":"static/js/main.dc243472.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BookSearch_container__pynAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Gears_container__34F6S\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Book from 'types/Book';\nimport BookAPI from 'shared/services/api/google-books';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst api = new BookAPI(process.env.GOOGLE_BOOKS_API_KEY);\n\nexport enum ActionTypes {\n    FETCHING = '[books] FETCHING',\n    FETCHED = '[books] FETCHED',\n}\n\ninterface Fetching {\n    type: ActionTypes.FETCHING;\n    payload: { query: string };\n}\n\ninterface Fetched {\n    type: ActionTypes.FETCHED;\n    payload: { data: Book[] };\n}\n\nconst fetched = (data: Book[]): Fetched => {\n    return {\n        type: ActionTypes.FETCHED,\n        payload: {\n            data,\n        },\n    };\n};\n\nconst fetching = (query: string): Fetching => {\n    return {\n        type: ActionTypes.FETCHING,\n        payload: {\n            query,\n        },\n    };\n};\n\n// External method for fetching results\nexport const fetch = (query: string): ThunkAction<void, {}, {}, AnyAction> => {\n    return (dispatch: ThunkDispatch<{}, {}, AnyAction>): void => {\n        dispatch(fetching(query));\n        if (query.length > 0) {\n            api.search(query)\n                .then(\n                    (data: Book[]): void => {\n                        dispatch(fetched(data));\n                    },\n                )\n                .catch(\n                    (): void => {\n                        dispatch(fetched([]));\n                    },\n                );\n        } else {\n            dispatch(fetched([]));\n        }\n    };\n};\n\nexport type Action = Fetching | Fetched;\n","import * as Global from '../reducers';\nimport * as Books from '../reducers/books';\nimport { createSelector } from 'reselect';\nimport Book from 'types/Book';\n\nconst getBooksState = (state: Global.State): Books.State => state.books;\n\nexport const getBooks = createSelector(\n    [getBooksState],\n    (state: Books.State): Book[] => {\n        return state.data;\n    },\n);\n\nexport const isFetching = createSelector(\n    [getBooksState],\n    (state: Books.State): boolean => {\n        return state.isFetching;\n    },\n);\n\nexport const hasData = createSelector(\n    [getBooksState],\n    (state: Books.State): boolean => {\n        return state.hasData;\n    },\n);\n\nexport const getQuery = createSelector(\n    [getBooksState],\n    (state: Books.State): string => {\n        return state.query;\n    },\n);\n","import React from 'react';\nimport Styles from './BookList.module.scss';\nimport { connect } from 'react-redux';\nimport { State } from 'reducers';\nimport Typography from '@material-ui/core/Typography';\nimport { getBooks, getQuery, hasData } from 'selectors/books';\nimport Book from 'types/Book';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\ninterface Props {\n    data: Book[];\n    query: string;\n    hasData: boolean;\n}\n\nconst Component: React.FC<Props> = (props: Props): JSX.Element => {\n    function generateSubtitle(book: Book): JSX.Element {\n        let subtitle = book.authors.join(', ');\n        subtitle += subtitle.length > 0 ? `, ${book.publisher}` : book.publisher;\n        return <span>{subtitle}</span>;\n    }\n    return (\n        <section className={Styles.container}>\n            {props.hasData && props.query.length > 0 ? (\n                <GridList spacing={15} cellHeight={400}>\n                    <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                        <ListSubheader component=\"div\">Search results for: {props.query}</ListSubheader>\n                    </GridListTile>\n                    {props.data.map(\n                        (book: Book, index: number): JSX.Element => {\n                            return (\n                                <GridListTile key={index}>\n                                    <img src={book.image} alt={book.title} />\n                                    <GridListTileBar\n                                        title={book.title}\n                                        subtitle={generateSubtitle(book)}\n                                        actionIcon={\n                                            <IconButton\n                                                onClick={(): void => {\n                                                    Object.assign(document.createElement('a'), {\n                                                        target: '_blank',\n                                                        href: book.link,\n                                                    }).click();\n                                                }}\n                                            >\n                                                <InfoIcon color=\"secondary\" />\n                                            </IconButton>\n                                        }\n                                    />\n                                </GridListTile>\n                            );\n                        },\n                    )}\n                </GridList>\n            ) : (\n                <Typography variant=\"body1\" gutterBottom>\n                    <span>No books found for&quot;{props.query}&quot;</span>\n                </Typography>\n            )}\n        </section>\n    );\n};\n\nconst mapStateToProps = (state: State): Props => ({\n    data: getBooks(state),\n    hasData: hasData(state),\n    query: getQuery(state),\n});\n\nexport default connect(mapStateToProps)(Component);\n","import axios, { AxiosResponse, AxiosError } from 'axios';\nimport GoogleBooksAPI from './GoogleBooksAPI';\nimport Book from 'types/Book';\nimport GoogleBook from './GoogleBook';\nimport GoogleBooksAPIResults from './GoogleBooksResults';\n\nexport default class GoogleBooks implements GoogleBooksAPI {\n    public static ConvertGoogleBookToBook(book: GoogleBook): Book {\n        // Not all books have image data, get highest res image possible\n        // A more thorough demo would have small, medium, large, etc\n        let image = 'https://via.placeholder.com/150';\n        if (book.volumeInfo.imageLinks) {\n            image = book.volumeInfo.imageLinks.extraLarge;\n            if (typeof image === 'undefined') {\n                image = book.volumeInfo.imageLinks.large;\n            }\n            if (typeof image === 'undefined') {\n                image = book.volumeInfo.imageLinks.medium;\n            }\n            if (typeof image === 'undefined') {\n                image = book.volumeInfo.imageLinks.small;\n            }\n            if (typeof image === 'undefined') {\n                image = book.volumeInfo.imageLinks.smallThumbnail;\n            }\n            if (typeof image === 'undefined') {\n                image = book.volumeInfo.imageLinks.thumbnail;\n            }\n        }\n\n        return {\n            authors: book.volumeInfo.authors ? book.volumeInfo.authors : [],\n            title: book.volumeInfo.title,\n            subtitle: book.volumeInfo.subtitle,\n            publisher: book.volumeInfo.publisher,\n            publishedDate: book.volumeInfo.publishedDate,\n            image,\n            link: book.volumeInfo.infoLink,\n            rating: book.volumeInfo.averageRating,\n        };\n    }\n\n    public static ConvertGoogleBooksToBooks(books: GoogleBook[]): Book[] {\n        const convertedBooks: Book[] = [];\n\n        for (const b of books) {\n            convertedBooks.push(GoogleBooks.ConvertGoogleBookToBook(b));\n        }\n\n        return convertedBooks;\n    }\n\n    private readonly apiUrl = 'https://www.googleapis.com/books/v1/volumes';\n    private maxResults: number;\n    private key: string | undefined;\n\n    /**\n     * @param key\n     */\n    public constructor(key?: string) {\n        this.maxResults = 12;\n        this.key = key;\n\n        if (!this.hasKey()) {\n            console.warn('Google Books API initiated without an API Key. Quota restrictions and errors may occur.');\n        }\n    }\n\n    /**\n     * @return {boolean}\n     */\n    public hasKey(): boolean {\n        return typeof this.key === 'string';\n    }\n\n    /**\n     * @return {string | undefined}\n     */\n    public getKey(): string | undefined {\n        return this.key;\n    }\n\n    /**\n     * @param query\n     * @return {Promise<Book[] | never>}\n     */\n    public search(query: string): Promise<Book[] | never> {\n        const url = `${this.apiUrl}?q=${encodeURI(query)}&maxResults=${this.maxResults}${\n            this.hasKey() ? '&key=' + this.getKey() : ''\n        }`;\n\n        console.debug(`Google Books API request ${url} is starting`);\n\n        return axios\n            .get<GoogleBooksAPIResults>(url)\n            .then(\n                (res: AxiosResponse<GoogleBooksAPIResults>): Book[] => {\n                    return GoogleBooks.ConvertGoogleBooksToBooks(res.data.items);\n                },\n            )\n            .catch(\n                (axiosError: AxiosError): Promise<never> => {\n                    console.error(axiosError.name, axiosError.message);\n                    return Promise.reject(axiosError);\n                },\n            )\n            .finally(\n                (): void => {\n                    console.debug(`Google Books API request ${url} has finalised`);\n                },\n            );\n    }\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Styles from './BookSearch.module.scss';\nimport { connect } from 'react-redux';\nimport { fetch } from 'actions/books';\nimport { State } from 'reducers';\nimport { getQuery } from 'selectors/books';\n\ninterface StateToProps {\n    query: string;\n}\n\ninterface DispatchToProps {\n    fetch: (query: string) => void;\n}\n\ninterface Props extends StateToProps, DispatchToProps {}\n\nconst Component: React.FC<Props> = (props: Props): JSX.Element => {\n    const minUserInteractionMS = 500;\n    let intervalId: NodeJS.Timeout;\n\n    const onTyping = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const query = event.currentTarget.value;\n        clearTimeout(intervalId);\n        intervalId = setTimeout((): void => {\n            // done typing\n            props.fetch(query);\n        }, minUserInteractionMS);\n    };\n\n    return (\n        <section className={Styles.container}>\n            {/**\n             * We use defaultValue not value as we want the component to\n             * update to props.query and also manage its own value state\n             */}\n            <TextField\n                label=\"Search library for...\"\n                defaultValue={props.query}\n                onChange={onTyping}\n                margin=\"normal\"\n                fullWidth\n            />\n        </section>\n    );\n};\n\nconst mapStateToProps = (state: State): StateToProps => ({\n    query: getQuery(state),\n});\n\n// TODO Remove any types e.g. dispatch: any -> dispatch: BookThunkDispatch\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst mapDispatchToProps = (dispatch: any): DispatchToProps => {\n    return {\n        fetch: (query: string): void => dispatch(fetch(query)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Component);\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport Styles from './Gears.module.scss';\nimport animationData from '../../assets/lottie/geegrs-animation.json';\n\nconst Component: React.FC = (): JSX.Element => {\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: animationData,\n    };\n\n    return (\n        <div className={Styles.container}>\n            <Lottie options={defaultOptions} />\n        </div>\n    );\n};\n\nexport default Component;\n","import React from 'react';\nimport Styles from './Home.module.scss';\nimport BookList from '../BookList';\nimport BookSearch from '../BookSearch';\nimport Gears from '../Gears';\nimport { State } from 'reducers';\nimport { connect } from 'react-redux';\nimport { isFetching, hasData, getQuery } from 'selectors/books';\n\ninterface Props {\n    isFetching: boolean;\n    hasData: boolean;\n    query: string;\n}\n\nconst NoItemsComponent: React.FC = (): JSX.Element => {\n    return (\n        <div className={Styles.noItemsContainer}>\n            <BookSearch />\n        </div>\n    );\n};\n\nconst ItemsLoadingComponent: React.FC = (): JSX.Element => {\n    return (\n        <div className={Styles.noItemsContainer}>\n            <Gears />\n        </div>\n    );\n};\n\nconst HasItemsComponent: React.FC = (): JSX.Element => {\n    return (\n        <div className={Styles.hasItemsContainer}>\n            <BookSearch />\n            <BookList />\n        </div>\n    );\n};\n\nconst Component: React.FC<Props> = (props: Props): JSX.Element => {\n    let c;\n    if (props.isFetching && props.query.length > 0) {\n        c = <ItemsLoadingComponent />;\n    } else if (props.hasData && props.query.length) {\n        c = <HasItemsComponent />;\n    } else {\n        c = <NoItemsComponent />;\n    }\n    return <section className={Styles.container}>{c}</section>;\n};\n\nconst mapStateToProps = (state: State): Props => ({\n    isFetching: isFetching(state),\n    hasData: hasData(state),\n    query: getQuery(state),\n});\n\nexport default connect(mapStateToProps)(Component);\n","import React from 'react';\nimport Styles from './Navbar.module.scss';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Component: React.FC = (): JSX.Element => {\n    return (\n        <header className={Styles.container}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" className={Styles.grow}>\n                        Library Search\n                        <div className={Styles.version}>{process.env.REACT_APP_VERSION}</div>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </header>\n    );\n};\nexport default Component;\n","import React, { ReactNode } from 'react';\nimport Navbar from '../Navbar';\n\nexport interface Props {\n    children: ReactNode;\n}\n\nconst Component: React.FC<Props> = (props: Props): JSX.Element => {\n    return (\n        <React.Fragment>\n            <Navbar />\n            <section>{props.children}</section>\n        </React.Fragment>\n    );\n};\n\nexport default Component;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { COLOR_BLUE_HEX, COLOR_CHARCOAL_HEX } from '../../styles/variables';\n\nexport default createMuiTheme({\n    palette: {\n        primary: {\n            main: COLOR_BLUE_HEX,\n        },\n    },\n    overrides: {\n        MuiButton: {\n            root: {\n                justifyContent: 'center',\n            },\n        },\n        MuiTypography: {\n            body1: {\n                color: COLOR_CHARCOAL_HEX,\n            },\n            h6: {\n                color: COLOR_BLUE_HEX,\n            },\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n","import { ColorRGB, ColorHex } from 'types/Color';\n\n// Parity with SCSS Variables sheet\nexport const COLOR_RED_RGB: ColorRGB = { r: 219, g: 68, b: 55 };\nexport const COLOR_GREEN_RGB: ColorRGB = { r: 15, g: 157, b: 88 };\nexport const COLOR_BLUE_RGB: ColorRGB = { r: 66, g: 133, b: 244 };\nexport const COLOR_YELLOW_RGB: ColorRGB = { r: 244, g: 160, b: 0 };\nexport const COLOR_GREY_RGB: ColorRGB = { r: 242, g: 242, b: 242 };\nexport const COLOR_CHARCOAL_RGB: ColorRGB = { r: 35, g: 35, b: 35 };\n\nexport const COLOR_RED_HEX: ColorHex = '#DB4437';\nexport const COLOR_GREEN_HEX: ColorHex = '#0F9D58';\nexport const COLOR_BLUE_HEX: ColorHex = '#4285F4';\nexport const COLOR_YELLOW_HEX: ColorHex = '#F4B400';\nexport const COLOR_GREY_HEX: ColorHex = '#F2F2F2';\nexport const COLOR_CHARCOAL_HEX: ColorHex = '#232323';\n","import { ActionTypes, Action } from '../actions/books';\nimport Book from 'types/Book';\n\n/*\n * Book state interface\n */\nexport interface State {\n    isFetching: boolean;\n    hasData: boolean;\n    data: Book[];\n    query: string;\n}\n\n/*\n * Initial empty state\n */\nexport const initialState: State = {\n    hasData: false,\n    data: [],\n    isFetching: false,\n    query: '',\n};\n\n/*\n * Book state update\n */\nexport const reducer = (state: State = initialState, action: Action): State => {\n    switch (action.type) {\n        case ActionTypes.FETCHING: {\n            return {\n                hasData: false,\n                data: [],\n                isFetching: true,\n                query: action.payload.query,\n            };\n        }\n        case ActionTypes.FETCHED: {\n            return {\n                ...state,\n                data: action.payload.data,\n                isFetching: false,\n                hasData: action.payload.data.length > 0,\n            };\n        }\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport * as fromBooks from './books';\n\nexport interface State {\n    books: fromBooks.State;\n}\n\n/*\n * initialState of the app\n */\nexport const initialState: State = {\n    books: fromBooks.initialState,\n};\n\n/*\n * Root reducer of the app\n */\nexport const reducer = combineReducers<State>({\n    books: fromBooks.reducer,\n});\n","import logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport { State, reducer, initialState } from '../reducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst store = createStore<State, any, any, any>(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunk, logger)),\n);\n\nexport default store;\n","import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from '../Home';\nimport Layout from '../Layout';\nimport theme from './theme';\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nconst App: React.FC = (): JSX.Element => {\n    return (\n        <Provider store={store}>\n            <MuiThemeProvider theme={theme}>\n                <HashRouter>\n                    <Layout>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                        </Switch>\n                    </Layout>\n                </HashRouter>\n            </MuiThemeProvider>\n        </Provider>\n    );\n};\n\nexport default App;\n","/** TODO: Covert serviceWorker.ts to*/\n/* eslint-disable sonarjs/cognitive-complexity */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nconst registerValidSW = (swUrl: string, config?: Config): void => {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(\n            (registration): void => {\n                registration.onupdatefound = (): void => {\n                    const installingWorker = registration.installing;\n                    if (installingWorker == null) {\n                        return;\n                    }\n                    installingWorker.onstatechange = (): void => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the updated precached content has been fetched,\n                                // but the previous service worker will still serve the older\n                                // content until all client tabs are closed.\n                                console.log(\n                                    'New content is available and will be used when all ' +\n                                        'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                                );\n\n                                // Execute callback\n                                if (config && config.onUpdate) {\n                                    config.onUpdate(registration);\n                                }\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // \"Content is cached for offline use.\" message.\n                                console.log('Content is cached for offline use.');\n\n                                // Execute callback\n                                if (config && config.onSuccess) {\n                                    config.onSuccess(registration);\n                                }\n                            }\n                        }\n                    };\n                };\n            },\n        )\n        .catch(\n            (error): void => {\n                console.error('Error during service worker registration:', error);\n            },\n        );\n};\n\nconst checkValidServiceWorker = (swUrl: string, config?: Config): void => {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(\n            (response): void => {\n                // Ensure service worker exists, and that we really are getting a JS file.\n                const contentType = response.headers.get('content-type');\n                if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                    // No service worker found. Probably a different app. Reload the page.\n                    navigator.serviceWorker.ready.then(\n                        (registration): void => {\n                            registration.unregister().then(\n                                (): void => {\n                                    window.location.reload();\n                                },\n                            );\n                        },\n                    );\n                } else {\n                    // Service worker found. Proceed as normal.\n                    registerValidSW(swUrl, config);\n                }\n            },\n        )\n        .catch(\n            (): void => {\n                console.log('No internet connection found. App is running in offline mode.');\n            },\n        );\n};\n\nexport function register(config?: Config): void {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\n            'load',\n            (): void => {\n                const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n                if (isLocalhost) {\n                    // This is running on localhost. Let's check if a service worker still exists or not.\n                    checkValidServiceWorker(swUrl, config);\n\n                    // Add some additional logging to localhost, pointing developers to the\n                    // service worker/PWA documentation.\n                    navigator.serviceWorker.ready.then(\n                        (): void => {\n                            console.log(\n                                'This web app is being served cache-first by a service ' +\n                                    'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                            );\n                        },\n                    );\n                } else {\n                    // Is not localhost. Just register service worker\n                    registerValidSW(swUrl, config);\n                }\n            },\n        );\n    }\n}\nexport function unregister(): void {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(\n            (registration): void => {\n                registration.unregister();\n            },\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3HKK4\",\"noItemsContainer\":\"Home_noItemsContainer__2b_aS\",\"scaleIn\":\"Home_scaleIn__gPYfo\",\"fadeIn\":\"Home_fadeIn__1DJi9\",\"hasItemsContainer\":\"Home_hasItemsContainer__3Abs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__Stw5O\",\"version\":\"Navbar_version__Fdh_N\"};"],"sourceRoot":""}